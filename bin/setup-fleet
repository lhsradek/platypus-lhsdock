#!/usr/bin/env bash

read_var() {
    VAR=$(grep -m 1 "$1" "$2" | xargs)
    IFS="=" read -ra VAR <<< "$VAR"
    echo "${VAR[1]}"
}

scriptPath="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
rootPath="$(dirname "${scriptPath}")"

if [[ ! -f "$rootPath/.env" ]]; then
    echo "ERROR: File .env not found";
    echo;
    exit 1;
fi

RUNENV=$1

if [[ -z "$RUNENV" ]]; then
    RUNENV="local"
fi

APP_ID=$(read_var APP_ID .env)

for NAME in fleet; do
  if !(docker volume inspect "${APP_ID}-${NAME}" >/dev/null 2>&1); then
    echo "Volume don't exists. First start 'bin/install' or create ${APP_ID}-${NAME}!"
    exit 1
  fi
done;

if [[ -f "$rootPath/docker-compose.$RUNENV.yml" ]]; then
  echo "================= STOP ================="
  ${scriptPath}/stop
  echo
  echo "Nothing to do, docker-compose.$RUNENV.yml exists. Remove it first!"
  exit 1;
else  
  echo	
  echo "================= MAKE docker-compose.$RUNENV.yml ================="
  cat $rootPath/compose/docker-head.yml > $rootPath/docker-compose.$RUNENV.yml
  # cat $rootPath/compose/docker-logstash.yml >> $rootPath/docker-compose.$RUNENV.yml
  cat $rootPath/compose/docker-fleet.yml >> $rootPath/docker-compose.$RUNENV.yml
  cat $rootPath/compose/docker-weblhs.yml >> $rootPath/docker-compose.$RUNENV.yml
  cat $rootPath/compose/docker-wiki.yml >> $rootPath/docker-compose.$RUNENV.yml
  cat $rootPath/compose/docker-end.yml >> $rootPath/docker-compose.$RUNENV.yml
  echo
  echo "================= START SETUP WITH SOLO FLEET SERVER ================"
  #${scriptPath}/start

  echo
  echo "Use 'bin/stop for Stop, 'bin/start' for Start or 'bin/restart' for Restart"
fi
