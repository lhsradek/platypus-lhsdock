###################### Metricbeat Configuration #######################

http.enabled: true
http.port: ${MONITOR_PORT}
http.host: "0.0.0.0"

monitoring:
  enabled: false
  # cluster_uuid: "${CLUSTER_UUID}"

  # elasticsearch:
  #   username: "${ELASTICSEARCH_USERNAME}"
  #   password: "${ELASTICSEARCH_PASSWORD}"
  #   hosts: ["${ELASTIC_HOST}"]
  #   protocol: "https"
  #   ssl.enabled: true
  #   ssl.certificate_authorities: ["${ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES}"]
  #   ssl.verification_mode: "${VERIFICATION_MODE}"

metricbeat.config.modules:
  path: ${path.config}/modules.d/*.yml
  reload.enabled: false

processors:
  # - add_host_metadata:
  #     when.not.contains.tags: forwarded
  - add_docker_metadata: ~
  # - add_cloud_metadata: ~
  # - add_kubernetes_metadata: ~
  - add_tags:
      tags: ["${STAGE}"]
      target: "environment"
  - add_tags:
      tags: ["${APP_HOST}-${APP_ID}"]
      target: "app.id"

hostPid: true

instrumentation:
  enabled: true
  environment: "${STAGE}"
  hosts: ["${ELASTIC_APM_SERVER_URL}"]
  # api_key: "${ELASTIC_APM_API_KEY}"
  tags: ["${APP_HOST}-${APP_ID}"]

inputs:
  - type: system/metrics
    data_stream.namespace: default
    use_output: default
    streams:
      - metricset: cpu
        data_stream.dataset: system.cpu
      - metricset: memory
        data_stream.dataset: system.memory
      - metricset: network
        data_stream.dataset: system.network
      - metricset: filesystem
        data_stream.dataset: system.filesystem

output:

# ----------------------------- Logstash Output ----------------------------
#
  #logstash:
    #enabled: true
    #hosts: [ "logstash.${HOST_NICK}.${APP_NET}:5044" ]
    #ssl:
      #certificate: "${LOGSTASH_SERVER_CERT}"
      #key: "${LOGSTASH_SERVER_CERT_KEY}"
      #verification_mode: "none"
    #timeout: 20s
    #index: "logs"

# ----------------------------- Elasticsearch Output ----------------------------

  elasticsearch:
    hosts: ["${ELASTIC_HOST}"]
    protocol: "https"
    username: "${ELASTICSEARCH_USERNAME}"
    password: "${ELASTICSEARCH_PASSWORD}"
    ssl:
      enabled: true
      certificate_authorities: ["${ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES}"]
      # verification_mode: "${VERIFICATION_MODE}"
      verification_mode: "none"
    
# ------------------------------ Setup -------------------------------

setup:
  ilm.overwrite: false
  template:
    settings:
      index.number_of_shards: 2
      index.number_of_replicas: 1
      index.codec: best_compression
      _source.enabled: false

  elasticsearch:
    hosts: ["${ELASTIC_HOST}"]
    protocol: "https"
    username: "${ELASTICSEARCH_USERNAME}"
    password: "${ELASTICSEARCH_PASSWORD}"
    ssl:
      enabled: true
      certificate_authorities: ["${ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES}"]
      # verification_mode: "${VERIFICATION_MODE}"
      verification_mode: "none"

  kibana:
    host: "${KIBANA_HOST}"
    username: "${ELASTICSEARCH_USERNAME}"
    password: "${ELASTICSEARCH_PASSWORD}"
    ssl:
      enabled: true
      certificate_authorities: ["${ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES}"]
      # verification_mode: "${VERIFICATION_MODE}"
      verification_mode: "none"
