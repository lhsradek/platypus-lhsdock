**[[Elasticsearch]]** **[[Logstash]]** **[[Kibana]]** [[Cerebro]] [[Elastic-agent]] [[APM-server]] [[Fleet-server]] [[Beats]] [[Traefik]]

====== platypus-lhsdock ======

[[https://github.com/lhsradek/platypus-lhsdock|platypus-lhsdock]] [[https://hub.docker.com/repository/docker/lhsradek/lhsdock|{{https://img.shields.io/docker/pulls/lhsradek/lhsdock.png?recache}}]] with [[https://www.elastic.co/|ELK]]

===== Elasticsearch - Logstash - Kibana =====

===== Repositories =====

^ REPOSITORY                                            ^  TAG       ^ SIZE        ^ OPTIONAL ^
| nginx:alpine                                          | latest     | 40.7MB      | [[https://github.com/lhsradek/platypus-lhsdock|platypus-lhsdock]] |
| [[https://github.com/lhsradek/platypus-lhsfpm|platypus-lhsfpm]] [[https://hub.docker.com/repository/docker/lhsradek/fpm|{{https://img.shields.io/docker/pulls/lhsradek/fpm.png?recache}}]]       | v1         | 488MB       | php:fpm-alpine |
| [[https://hub.docker.com/_/elasticsearch|docker.elastic.co/elasticsearch/elasticsearch]] | 8.6.2 | 1.29GB      |
| [[https://hub.docker.com/_/kibana|docker.elastic.co/kibana/kibana]] | 8.6.2      | 727MB       |
| docker.elastic.co/enterprise-search/enterprise-search | 8.6.2      | 1.45GB      |
| [[https://hub.docker.com/_/logstash|logstash]]        | 8.6.2      | 732MB       |
| docker.elastic.co/beats/elastic-agent                 | 8.6.2      | 1.54GB      | 
| docker.elastic.co/beats/elastic-agent-complete for [[https://www.elastic.co/guide/en/observability/current/monitor-uptime-synthetics.html#monitoring-synthetics|Elastic Synthetics]] | 8.6.2      | 3.22GB      |
| docker.elastic.co/apm/apm-server                      | 8.6.2      | 122MB       |
| docker.elastic.co/beats/metricbeat                    | 8.6.2      | 320MB       |
| docker.elastic.co/beats/heartbeat                     | 8.6.2      | 2.04GB      |
| docker.elastic.co/beats/filebeat                      | 8.6.2      | 288MB       |
| lmenezes/cerebro                                      | 0.9.4      | 284MB       |
| [[https://hub.docker.com/r/linuxserver/dokuwiki|lscr.io/linuxserver/dokuwiki]]   | latest     | 235MB       |


==== setup lhsdock ====
create .env file
<code bash># cp .env.dist .env</code>

==== run lhsdock ====
<code bash># bin/start</code>

==== exec lhsdock ====
<code bash># bin/exec</code>

==== restart lhsdock ====
<code bash># bin/restart</code>

<code bash>
================= STOP =================
Stopping lhsdock-eps       ... done
Stopping lhsdock-fleet     ... done
Stopping lhsdock-cerebro   ... done
Stopping lhsdock-kibana    ... done
Stopping lhsdock-heartbeat ... done
Stopping lhsdock-logstash  ... done
Stopping lhsdock-es03      ... done
Stopping lhsdock-es02      ... done
Stopping lhsdock-wiki      ... done
Stopping lhsdock-web       ... done
Stopping lhsdock-php       ... done
Stopping lhsdock-es01      ... done
Removing lhsdock-eps       ... done
Removing lhsdock-fleet     ... done
Removing lhsdock-cerebro   ... done
Removing lhsdock-kibana    ... done
Removing lhsdock-heartbeat ... done
Removing lhsdock-logstash  ... done
Removing lhsdock-es03      ... done
Removing lhsdock-es02      ... done
Removing lhsdock-wiki      ... done
Removing lhsdock-web       ... done
Removing lhsdock-php       ... done
Removing lhsdock-es01      ... done
Removing lhsdock-setup     ... done
Removing network nginx.local
Network traefik.local is external, skipping
================= START ================
Pulling setup       ... done
Pulling weblhs-php  ... done
Pulling weblhs      ... done
Pulling weblhs-wiki ... done
Pulling es01        ... done
Pulling es02        ... done
Pulling es03        ... done
Pulling cerebro     ... done
Pulling heartbeat   ... done
Pulling kibana      ... done
Pulling logstash    ... done
Pulling fleet       ... done
Pulling eps         ... done
Creating network "nginx.local" with driver "bridge"
Creating lhsdock-setup ... done
Creating lhsdock-php   ... done
Creating lhsdock-web   ... done
Creating lhsdock-es01  ... done
Creating lhsdock-wiki  ... done
Creating lhsdock-es02  ... done
Creating lhsdock-es03      ... done
Creating lhsdock-kibana    ... done
Creating lhsdock-cerebro   ... done
Creating lhsdock-logstash  ... done
Creating lhsdock-heartbeat ... done
Creating lhsdock-fleet     ... done
Creating lhsdock-eps       ... done
</code>

==== stop lhsdock ====
<code bash># bin/stop</code>

With [[https://hub.docker.com/repository/docker/lhsradek/lhsdock/|lhsradek/lhsdock]] You can use [[platypus.pl]] for certificates,
which I don't use much anymore, the Elastic Certificate Tool is used by webservice 'setup'.

<code bash># perl /root/bin/platypus.pl</code>

^ IMAGES               ^ PORTS                  ^ NAMES              ^ HOSTNAMES                 ^ OPTIONAL^
| lhsradek/lhsdock:v3  | 80/tcp, 443/tcp        | lhsdock            | <code>docker.nginx.local</code>            |
| php:fpm-alpine       | 9000/tcp               | lhsdock-php        | <code>weblhs-php.docker.nginx.local</code> |
| [[elasticsearch]]    |                        | lhsdock-setup      | <code>setup.docker.nginx.local</code>      |  *  |
| elasticsearch        | 9200/tcp, 9300/tcp     | lhsdock-es01       | <code>es01.docker.nginx.local</code>       |
| elasticsearch        | 9201/tcp, 9301/tcp     | lhsdock-es02       | <code>es02.docker.nginx.local</code>       |
| elasticsearch        | 9202/tcp, 9302/tcp     | lhsdock-es03       | <code>es03.docker.nginx.local</code>       |  *  |
| [[kibana]]           | 5601/tcp               | lhsdock-kibana     | <code>kibana.docker.nginx.local</code>     |
| [[apm-server]]       | 5066/tcp, 8200/tcp     | lhsdock-apm-server | <code>apm-server.docker.nginx.local</code> |  *  |
| [[beats#metricbeat|metricbeat]]| 5066/tcp     | lhsdock-metricbeat | <code>metricbeat.docker.nginx.local</code> |  *  |
| [[beats#filebeat|filebeat]]    | 5066/tcp     | lhsdock-filebeat   | <code>filebeat.docker.nginx.local</code>   |  *  |
| [[beats#heartbeat|heartbeat]]  | 5066/tcp     | lhsdock-heartbeat  | <code>heartbeat.docker.nginx.local</code>  |
| enterprise-search    | 3002/tcp               | lhsdock-eps        | <code>eps.docker.nginx.local</code>        |  *  |
| [[elastic-agent]]    | 8200/tcp, 8220/tcp ..  | lhsdock-fleet      | <code>fleet.docker.nginx.local</code>      |  *  |
| [[logstash]]         | 5044/tcp, 9600/tcp     | lhsdock-logstash   | <code>logstash.docker.nginx.local</code>   |  *  |
| [[cerebro]]          | 9000/tcp               | lhsdock-cerebro    | <code>cerebro.docker.nginx.local</code>    |  *  |
| dokuwiki:latest      | 80/tcp, 443/tcp        | lhsdock-wiki       | <code>wiki.docker.nginx.local</code>       |  *  |

===== My home network =====

My home network consists of two computers running docker. I have two elasticsearch nodes on computer docker and one node is enough for me on the computer www. Applications from computers can therefore write to their nearest node. That one will be yellow when the main docker computer is not running. As soon as I release it, the nodes communicate with each other and the cluster turns green. Furthermore, I placed logstash in a project with traefik, so it is easily accessible to other projects that have traefik as the default network. Each project, including traffic, has its own filebeat and metricbeat or fleet server, which takes care of its logs and services. So services and logs are not tested if the project is not running. In a production environment, it would be enough to have only one filebeat and one metricbeat each, or one fleet server per computer.

{{diagram.png?600x440}}

===== Screenshots =====

=== Kibana - Observability - Infrastructure - Inventory - metricbeat.docker.nginx.local ===

{{kibana01.png?600x440}}

=== Dashboard - LHS ===

{{dashboard01.png?600x466}}

=== platypus-lhsdock ===

{{lhsdock.png?600x466}}

