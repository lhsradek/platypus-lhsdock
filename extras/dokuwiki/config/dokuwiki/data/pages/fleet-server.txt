====== Fleet Server ======
[[start|platypus-lhsdock]] with [[Elasticsearch|E]][[Logstash|L]][[Kibana|K]]

[[https://github.com/lhsradek/platypus-lhsdock/tree/main/extras/nginx#readme|password configuration]]

[[https://github.com/lhsradek/platypus-lhsdock/tree/main/extras/elastic-agent|configuration]]

[[https://www.elastic.co/guide/en/fleet/current/index.html|Fleet and Elastic Agent Guide]]

[[https://www.elastic.co/guide/en/fleet/current/fleet-settings.html|Fleet UI settings]]


===== Setting Fleet Server ===== 

<code bash>cp certs/ca/ca.crt cert/ca.crt</code> This is so that other elastic agents from other projects can have ca.crt in the cert directory.

{{fleet01.png?600x432}}

==== Elasticsearch ====

Elasticsearch - hosts: <code>https://es01.docker.nginx.local:9200</code>

Elasticsearch - Advanced YAML configuration:
<code ini>ssl.certificate_authorities: ["/usr/share/elastic-agent/certs/ca.crt"]</code>

==== Logstash ====

See https://www.gooksu.com/2022/05/fleet-server-with-logstash-output-elastic-agent/

Specify hosts: <code>logstash.docker.nginx.local:5044</code>

For Server SSL certificate authorities (optional) output from
<code bash>
cat ./certs/ca/ca.crt
</code>

For Client SSL certificate output from
<code bash>
cat ./certs/logstash.docker.nginx.local/logstash.docker.nginx.local.crt
</code>

For Client SSL certificate key output from
<code bash>
cat ./certs/logstash.docker.nginx.local/logstash.docker.nginx.local.key
</code>

To logstash output - Advanced YAML configuration You can optional add:
<code>ssl.verification_mode: none</code>

Default for agent integrations interferes with APM, don't change it

Set **Make this output the default** for **agent monitoring**.

==== Enrollment token ====

For this project in **.env** set **FLEET_ENROLLMENT_TOKEN** from Enrollment tokens - **Agent Nginx policy 1**

==== Fleet Server ====

In Fleet - Agents add a Fleet Server select Advanced **Agent Nginx policy 1**
as Fleet Server host select <code>https://fleet.docker.nginx.local:8220</code> and Add host

Generate a service token and copy the token to **FLEET_SERVER_SERVICE_TOKEN** in **.env**
For this policy set <code ini>FLEET_SERVER_POLICY_ID=agent-nginx-policy-1</code> in **.env**
If you would make a new police (for example Agent Nginx policy 2) you need to create a fleet server with a new police
and edit the **.env** and set it.

Ignore other advice about enrollment (as curl and sudo elastic-agent enroll...) if the volume for the Fleet Server is empty,
everything will be created by itself thanks to how the environment variables of the Fleet Service are set in docker-compose file.

Environments variables for wordpress project in file [[https://github.com/lhsradek/platypus-wordpress-mysql/blob/main/.env.dist|.env]]
like this:
<code ini>
FLEET_ENROLLMENT_TOKEN=[Enrollment token]
FLEET_SERVER_POLICY_ID=elastic-agent-wordpress-policy-9
FLEET_SERVER_SERVICE_TOKEN=[Service token]
</code>

==== Cluster uuid ====

So that Filebeat does not hammer the Standalone Cluster, it is good to have the **CLUSTER_UUID** set in the **.env** before the first
launch of the Fleet Server. Setup writes it on the console.

In case of any change in the environment variables, the volume of the fleet server must be deleted, the fleet server will be created again and will enroll everything by itself. It is naive to think that variables can be changed additionally. It is always necessary to empty the volume.

Restart and see how Fleet Server start and enroll.

===== Kibana manages Fleet Server =====

Part from [[https://github.com/lhsradek/platypus-lhsdock/blob/main/extras/kibana/kibana.yml|kibana config]]

<code yaml>
fleet:
  agents:
    fleet_server:
      hosts:
        - "https://fleet.www.wordpress.local:8220"
        - "https://fleet.${APP_HOST}.wordpress.local:8220"
        - "https://fleet.www.tomcat.local:8220"
        - "https://fleet.${APP_HOST}.tomcat.local:8220"
    elasticsearch:
      hosts: 
        - "https://es01.${APP_HOST}.${APP_NET}:9200"
</code>

sets the fleet in kibana

=== Kibana - Fleet - Settings ===

<code bash># docker exec -it -u:0 wordpress-99-fleet bash</code>
<code bash>#@[fleet] ./elastic-agent status
Status: HEALTHY
Message: (no message)
Applications:
  * filebeat_monitoring    (HEALTHY)
                           Running
  * metricbeat_monitoring  (HEALTHY)
                           Running
  * metricbeat             (HEALTHY)
                           Running
  * apm-server             (HEALTHY)
                           Running
  * filebeat               (HEALTHY)
                           Running
  * fleet-server           (HEALTHY)
                           Running on policy with Fleet Server integration: elastic-agent-wordpress-policy-9
</code>

=== Kibana - Observability - Fleet - Agents ===

{{fleet02.png?600x420}}

From [[https://github.com/lhsradek/platypus-lhsdock/blob/main/extras/kibana/kibana.yml|kibana.yml]]:

<code yaml>
xpack.fleet.agentPolicies:
  - name: Fleet Server Wordpress policy 9
    description: Fleet Server Wordpress policy
    id: fleet-server-wordpress-policy-9
    namespace: default
    monitoring_enabled:
      - logs
      - metrics
    package_policies:
      - name: fleet_server_wordpress-9
        description: fleet_server
        package:
          name: fleet_server
      - name: elastic_agent_wordpress-9
        description: elastic_agent
        id: elastic_agent_wordpress
        package:
          name: elastic_agent
      - name: apm_wordpress-9
        description: apm_wordpress
        id: apm_wordpress
        package:
          name: apm
      - name: system_wordpress-9
        description: system
        id: system_wordpress
        package:
          name: system
      - name: docker_wordpress-9
        description: docker
        id: docker_wordpress
        package:
          name: docker
      - name: linux_wordpress-9
        description: linux
        id: linux_wordpress
        package:
          name: linux
      - name: nginx_wordpress-9
        description: nginx_wordpress
        id: nginx_wordpress
        package:
          name: nginx
      - name: mysql_wordpress-9
        description: mysql_wordpress
        id: mysql_wordpress
        package:
          name: mysql
      - name: osquery_wordpress-9
        description: osquery_wordpress
        id: osquery_wordpress
        package:
          name: osquery
      - name: redis_wordpress-9
        description: redis_wordpress
        id: redis_wordpress
        package:
          name: redis
</code>

=== Kibana - Observability - Fleet - Agents - fleet.wordpress.local ===

{{fleet03.png?600x434}}

=== Kibana - Observability - Fleet - Agent policies - Fleet server Tomcat policy 1 ===

{{fleet04.png?600x434}}

==== wordpress.local ====

[[https://github.com/lhsradek/platypus-wordpress-mysql/tree/main/extras/elastic-agent|Fleet Server for wordpress.local]]

==== tomcat.local ====

[[https://github.com/lhsradek/tombola/tree/main/extras/elastic-agent|Fleet Server for tomcat.local]]

-----
