version: '3.9'

networks:
  default:
    external: true
    name: ${DOCKER_NETWORK}
  intnet:
    external: false
    name: ${INT_NETWORK}

services:

#
# === APM Server ===
#
  apm:
    depends_on:
      es01:
        condition: service_healthy
    depends_on:
      es02:
        condition: service_healthy
    # Ubuntu - enterprisesearch
    image: docker.elastic.co/apm/apm-server:${STACK_VERSION}
    restart: ${DOCKER_RESTART_POLICY}
    container_name: "${APP_ID}-apm"
    hostname: "apm.${INT_NETWORK}"
    networks:
    # for traefik:
      - default
    # local network:
      - intnet
    # ports:
    #   - ${APM_PORT}:8200
    #   - 5066:5066
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./certs:/usr/share/apm-server/certs
      - ./extras/apm-server/apm-server.yml:/usr/share/apm-server/apm-server.yml:ro
      - ./logs/apm:/usr/share/apm-server/logs
      - apm:/usr/share/apm-server
    environment:
      - AGENT_API_KEY=${AGENT_API_KEY}
      - APP_ID=${APP_ID}
      - APP_HOST=${APP_HOST}
      - APP_NET=${INT_NETWORK}
      - APM_SERVER_CERT=/usr/share/apm-server/certs/apm.${INT_NETWORK}/apm.${INT_NETWORK}.crt
      - APM_SERVER_CERT_KEY=/usr/share/apm-server/certs/apm.${INT_NETWORK}/apm.${INT_NETWORK}.key
      - CLUSTER_NAME=${CLUSTER_NAME}
      - CLUSTER_UUID=${CLUSTER_UUID}
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${APM_PASSWORD}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=/usr/share/apm-server/certs/ca/ca.crt
      - STAGE=${STAGE}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${DOCKER_NETWORK}"
      - "traefik.http.routers.apm-public.rule=Host(`apm.${INT_NETWORK}`)"
      - "traefik.http.routers.apm-public.entrypoints=https"
      - "traefik.http.routers.apm-public.tls=true"
      - "traefik.http.services.apm-${APP_ID}.loadbalancer.server.port=5066"
      - "traefik.http.services.apm-${APP_ID}.loadbalancer.server.scheme=http"
      - "traefik.http.services.apm-${APP_ID}.loadbalancer.healthcheck.hostname=apm.${INT_NETWORK}"
    healthcheck:
      # test: ["CMD-SHELL", "apm-server test output | grep 'talk to server... OK'"]
      test: ["CMD-SHELL", "curl -s -I http://apm.${INT_NETWORK}:8200 | grep -q 'HTTP/1.1 200 OK'"]
      interval: 10s
      timeout: 60s
      retries: 500
   
#
# === Metricbeat ===
#
  metricbeat:
    depends_on:
      es01:
        condition: service_healthy
    depends_on:
      es02:
        condition: service_healthy
    depends_on:
      kibana:
        condition: service_healthy
    # Ubuntu - metricbeat
    image: docker.elastic.co/beats/metricbeat:${STACK_VERSION}
    restart: ${DOCKER_RESTART_POLICY}
    container_name: "${APP_ID}-metric"
    hostname: "metric.${INT_NETWORK}"
    user: root
    networks:
      # for traefik:
      - default
      # local network:
      - intnet
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /proc:/hostfs/proc:ro
      - /run:/run
      - /var/run:/var/run
      - /:/hostfs:ro
      - ./certs:/usr/share/metricbeat/certs
      - ./extras/metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
      - ./logs/metric:/usr/share/metricbeat/logs
      - metricbeat:/usr/share/metricbeat
    environment:
      - AGENT_API_KEY=${AGENT_API_KEY}
      - APP_ID=${APP_ID}
      - APP_HOST=${APP_HOST}
      - APP_NET=${INT_NETWORK}
      - CLUSTER_NAME=${CLUSTER_NAME}
      - CLUSTER_UUID=${CLUSTER_UUID}
      - ELASTICSEARCH_HOSTS=https://es01.${APP_HOST}.${INT_NETWORK}:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${APM_PASSWORD}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=/usr/share/metricbeat/certs/ca/ca.crt
      - EPS_PASSWORD=${EPS_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${DOCKER_NETWORK}"
      - "traefik.http.routers.metric-public.rule=Host(`metric.${INT_NETWORK}`)"
      - "traefik.http.routers.metric-public.entrypoints=https"
      - "traefik.http.routers.metric-public.tls=true"
      - "traefik.http.services.metric-${APP_ID}.loadbalancer.server.port=5066"
      - "traefik.http.services.metric-${APP_ID}.loadbalancer.server.scheme=http"
      - "traefik.http.services.metric-${APP_ID}.loadbalancer.healthcheck.hostname=metric.${INT_NETWORK}"
    healthcheck:
      # test: "metricbeat test output | grep 'talk to server... OK'"
      test: ["CMD-SHELL", "curl -s -I http://metric.${INT_NETWORK}:5066 | grep -q 'HTTP/1.1 200 OK'"]
      interval: 20s
      timeout: 10s
      retries: 50
         
#
# === Filebeat ===
#
  filebeat:
    depends_on:
      es01:
        condition: service_healthy
    depends_on:
      es02:
        condition: service_healthy
    depends_on:
      logstash:
        condition: service_healthy
    # Ubuntu - filebeat
    image: docker.elastic.co/beats/filebeat:${STACK_VERSION}
    restart: ${DOCKER_RESTART_POLICY}
    container_name: "${APP_ID}-file"
    hostname: "file.${INT_NETWORK}"
    networks:
    # for traefik:
      - default
    # local network:
      - intnet
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /proc:/hostfs/proc:ro
      - /:/hostfs:ro
      - ./certs:/usr/share/filebeat/certs
      - ./extras/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./logs/file/logs:/usr/share/filebeat/logs
      # - ./logs/file/registry:/usr/share/filebeat/data/registry
      - ./logs/apm:/usr/share/filebeat/elogs/apm-server
      - ./logs/dokuwiki:/usr/share/filebeat/elogs/nginx/dokuwiki
      - ./logs/es01:/usr/share/filebeat/elogs/es01
      - ./logs/es02:/usr/share/filebeat/elogs/es02
      - ./logs/es03:/usr/share/filebeat/elogs/es03
      - ./logs/eps:/usr/share/filebeat/elogs/eps
      - ./logs/heart:/usr/share/filebeat/elogs/heart
      - ./logs/kibana:/usr/share/filebeat/elogs/kibana
      - ./logs/nginx:/usr/share/filebeat/elogs/nginx/default
      - ./logs/metric:/usr/share/filebeat/elogs/metric
      # - /root/platypus-wordpress-mysql/logs/wordpress-nginx/:/usr/share/filebeat/elogs/nginx/platypus-wordpress-mysql
      # - /root/tombola/logs/tombola-nginx/:/usr/share/filebeat/elogs/nginx/tombola
      # - /root/tombola/logs/tombola-tomcat/:/usr/share/filebeat/elogs/tomcat/tombola
      - /root/platypus-box/logs/traefik:/usr/share/filebeat/elogs/traefik
      - filebeat:/usr/share/filebeat
    environment:
      - APP_ID=${APP_ID}
      - APP_HOST=${APP_HOST}
      - APP_NET=${INT_NETWORK}
      - AGENT_API_KEY=${AGENT_API_KEY}
      - CLUSTER_NAME=${CLUSTER_NAME}
      - CLUSTER_UUID=${CLUSTER_UUID}
      - ELASTICSEARCH_HOSTS=https://es01.${APP_HOST}.${INT_NETWORK}:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=/usr/share/filebeat/certs/ca/ca.crt
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${DOCKER_NETWORK}"
      - "traefik.http.routers.file-public.rule=Host(`file.${INT_NETWORK}`)"
      - "traefik.http.routers.file-public.entrypoints=https"
      - "traefik.http.routers.file-public.tls=true"
      - "traefik.http.services.file-${APP_ID}.loadbalancer.server.port=5066"
      - "traefik.http.services.file-${APP_ID}.loadbalancer.server.scheme=http"
      - "traefik.http.services.file-${APP_ID}.loadbalancer.healthcheck.hostname=file.${INT_NETWORK}"
    healthcheck:
      # test: "filebeat test output | grep 'talk to server... OK'"
      test: ["CMD-SHELL", "curl -s -I http://file.${INT_NETWORK}:5066 | grep -q 'HTTP/1.1 200 OK'"]
      interval: 10s
      timeout: 60s
      retries: 500

#
# === Heartbeat ===
#
  heartbeat:
    depends_on:
      es01:
        condition: service_healthy
    depends_on:
      es02:
        condition: service_healthy
    # Ubuntu - heartbeat
    image: docker.elastic.co/beats/heartbeat:${STACK_VERSION}
    restart: ${DOCKER_RESTART_POLICY}
    container_name: "${APP_ID}-heart"
    hostname: "heart.${INT_NETWORK}"
    networks:
      # for all the World 
      - default
      # local network:
      - intnet
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./certs:/usr/share/heartbeat/certs
      - ./extras/heartbeat/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml
      - ./logs/heart:/usr/share/heartbeat/logs
      - heartbeat:/usr/share/heartbeat
    environment:
      - APP_ID=${APP_ID}
      - APP_HOST=${APP_HOST}
      - APP_NET=${INT_NETWORK}
      - AGENT_API_KEY=${AGENT_API_KEY}
      - CLUSTER_NAME=${CLUSTER_NAME}
      - CLUSTER_UUID=${CLUSTER_UUID}
      - ELASTICSEARCH_HOSTS=https://es01.${APP_HOST}.${INT_NETWORK}:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=/usr/share/heartbeat/certs/ca/ca.crt
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${DOCKER_NETWORK}"
      - "traefik.http.routers.heart-public.rule=Host(`heart.${INT_NETWORK}`)"
      - "traefik.http.routers.heart-public.entrypoints=https"
      - "traefik.http.routers.heart-public.tls=true"
      - "traefik.http.services.heart-${APP_ID}.loadbalancer.server.port=5066"
      - "traefik.http.services.heart-${APP_ID}.loadbalancer.server.scheme=http"
      - "traefik.http.services.heart-${APP_ID}.loadbalancer.healthcheck.hostname=heart.${INT_NETWORK}"
    healthcheck:
      # test: "heartbeat test output | grep 'talk to server... OK'"
      test: ["CMD-SHELL", "curl -s -I http://heart.${INT_NETWORK}:5066 | grep -q 'HTTP/1.1 200 OK'"]
      interval: 10s
      timeout: 60s
      retries: 500
 
