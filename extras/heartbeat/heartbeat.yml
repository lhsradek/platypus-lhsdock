# Define a directory to load monitor definitions from. Definitions take the form
# of individual yaml files.

http.enabled: true
http.port: 5067
http.hosts:
  # - "127.0.0.1"
  - "unix:///var/run/docker.sock"

# monitoring.enabled: false
monitoring.cluster_uuid: "cluster-uuid"
cluster.name: ${CLUSTER_NAME}

heartbeat.config.monitors:
  # Directory + glob pattern to search for configuration files
  path: ${path.config}/monitors.d/*.yml
  # If enabled, heartbeat will periodically check the config.monitors path for changes
  reload.enabled: false
  # How often to check for changes
  reload.period: 15s

heartbeat.monitors:
- type: http
  schedule: '*/5 * * * * * *'
  id: http-service
  name: HTTP Service
  ipv6: false
  data_stream.namespace: default
  service.name: heartbeat-http
  username: '${ELASTICSEARCH_USERNAME:}'
  password: '${ELASTICSEARCH_PASSWORD:}'
  check.response.status: [200, 301, 302]
  hosts:
    - http://docker.nginx.local/nginx_status
    - https://kibana.docker.nginx.local:5601
    - https://es01.docker.nginx.local:9200
    - https://es02.docker.nginx.local:9201
    # - https://es03.docker.nginx.local:9202
  ssl:
    certificate_authorities: ['${ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES}']
    verification_mode: none

- type: icmp
  schedule: '*/3 * * * * * *'
  id: icmp-service
  name: ICMP Service
  ipv6: false
  data_stream.namespace: default
  service.name: heartbeat-icmp
  hosts:
    - es01.docker.nginx.local
    - kibana.docker.nginx.local
    - lhs.intranet.local
    - docker.intranet.local
    - mamka.intranet.local

heartbeat.scheduler:
  limit: 0

processors:
  - add_cloud_metadata: ~
  - add_docker_metadata: ~

setup:
  kibana:
    host: "https://kibana:5601"
    username: '${ELASTICSEARCH_USERNAME:}'
    password: '${ELASTICSEARCH_PASSWORD:}'
    ssl:
      enabled: true
      certificate_authorities: ['${ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES}']
  apm:
    enabled: true
    service_name: "heartbeat"
    server_url: "http://fleet:8200"

output:
  elasticsearch:
    hosts: 
      - "https://es01:9200"
      # - "https://es02:9201"
      # - "https://es03:9202"
    username: '${ELASTICSEARCH_USERNAME:}'
    password: '${ELASTICSEARCH_PASSWORD:}'
    ssl:
      enabled: true
      certificate_authorities: ['${ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES}']
      verification_mode: certificate
