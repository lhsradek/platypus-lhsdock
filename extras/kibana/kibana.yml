# Kibana configuration for docker target

monitoring:
  ui:
    enabled: true
    container:
      elasticsearch:
        enabled: false
    ccs:
      enabled: false
  kibana:
    collection.enabled: false


xpack:
  reporting:
    kibanaServer:
      hostname: "kibana"
    roles:
      enabled: false
    encryptionKey: 8de551ca1432f0dcf3ad2908472562b1
  security:
    encryptionKey: 363792db7b8cf9581c6cbdddbb8ff95f
    session:
      idleTimeout: 24h
  encryptedSavedObjects:
    encryptionKey: 97aa4816075f95e8d51bac9159574a19
  task_manager:
    # poll_interval: 4000
    max_workers: 3
  apm.serviceMapEnabled: false
  fleet:
    agents:
      fleet_server:
        hosts:
          - "https://fleet.${APP_NET}:8220"
      elasticsearch:
        hosts: 
          - "https://es01.${APP_HOST}.${APP_NET}:9200"
          - "https://es02.${APP_HOST}.${APP_NET}:9201"
          #- "https://es03.${APP_HOST}.${APP_NET}:9202"

    # https://www.elastic.co/guide/en/fleet/8.4/create-a-policy-no-ui.html
    packages:
      - name: fleet_server
        version: latest
      - name: system
        version: latest
      - name: apm 
        version: latest
      - name: docker
        version: latest
      - name: elastic_agent
        version: latest
      - name: mysql
        version: latest
      - name: nginx
        version: latest
      - name: osquery
        version: latest
      - name: postgresql
        version: latest
      - name: redis
        version: latest
      - name: synthetics
        version: latest
      - name: tomcat
        version: latest
      - name: traefik
        version: latest

    agentPolicies:
      - name: Fleet Server policy
        description: Fleet Server policy
        id: fleet-server-policy
        namespace: default
        package_policies:
          - name: fleet_server-1
            description: fleet_server
            package:
              name: fleet_server

      - name: Agent policy 1
        description: Agent policy
        id: agent-policy-1
        is_managed: false
        namespace: default
        monitoring_enabled:
          - logs
          - metrics
        package_policies:
          - name: system-1
            description: system
            id: default-system
            package:
              name: system
      
      - name: Elastic Synthetics 1
        description: Elastic Synthetics
        id: elastic-synthetics-policy-1
        namespace: default
        monitoring_enabled:
          - logs
          - metrics
        package_policies:
          - name: synthetics-1
            description: synthetics
            id: synthetics
            package:
              name: synthetics
      
      - name: APM policy 1
        description: APM policy
        id: apm-1
        namespace: default
        monitoring_enabled:
          - logs
          - metrics
        package_policies:
          - name: apm-1
            description: apm
            id: apm
            package:
              name: apm
      
      - name: Docker policy 1
        description: Docker policy
        id: docker-policy-1
        namespace: default
        monitoring_enabled:
          # - logs
          - metrics
        package_policies:
          - name: docker-1
            description: docker
            id: docker
            package:
              name: docker
      
      - name: MySQL policy 1
        description: MySQL policy
        id: mysql-policy-1
        namespace: default
        monitoring_enabled:
          - logs
          # - metrics
        package_policies:
          - name: mysql-1
            description: mysql
            id: mysql
            package:
              name: mysql
      
      - name: Nginx policy 1
        description: Nginx policy
        id: nginx-policy-1
        namespace: default
        monitoring_enabled:
          - logs
          - metrics
        package_policies:
          - name: nginx-1
            description: nginx
            id: nginx
            package:
              name: nginx
      
      - name: Osquery Logs 1
        description: Osquery Logs
        id: osquery-1
        namespace: default
        monitoring_enabled:
          - logs
          - metrics
        package_policies:
          - name: osquery-1
            description: osquery
            id: osquery
            package:
              name: osquery
  
      - name: PostgreSQL policy 1
        description: PostgreSQL policy
        id: postgresql-policy-1
        namespace: default
        monitoring_enabled:
          - logs
          - metrics
        package_policies:
          - name: postgresql-1
            description: postgresql
            id: postgresql
            package:
              name: postgresql
      
      - name: Redis policy 1
        description: Redis policy
        id: redis-policy-1
        namespace: default
        monitoring_enabled:
          - logs
          - metrics
        package_policies:
          - name: redis-1
            description: redis
            id: redis
            package:
              name: redis
      
      - name: Tomcat policy 1
        description: Tomcat policy
        id: tomcat-policy-1
        namespace: default
        monitoring_enabled:
          - logs
          - metrics
        package_policies:
          - name: tomcat-1
            description: tomcat
            id: tomcat
            package:
              name: tomcat
      
      - name: Traefik policy 1
        description: Traefik policy
        id: traefik-policy-1
        namespace: default
        monitoring_enabled:
          - logs
          - metrics
        package_policies:
          - name: traefik-1
            description: traefik
            id: traefik
            package:
              name: traefik
      
server:
  host: "0.0.0.0"
  shutdownTimeout: "120s"
  socketTimeout: "180000"
  publicBaseUrl: "https://kibana.${APP_HOST}.${APP_NET}:5601"
  ssl:
    enabled: true
    certificate: "${ELASTICSEARCH_SSL_SERVER_CERT}" 
    key: "${ELASTICSEARCH_SSL_SERVER_CERT_KEY}"

elasticsearch:
  hosts: 
    - "https://es01.${APP_HOST}.${APP_NET}:9200"
    - "https://es02.${APP_HOST}.${APP_NET}:9201"
    #- "https://es03.${APP_HOST}.${APP_NET}:9202"
  username: "${ELASTICSEARCH_USERNAME}"
  password: "${ELASTICSEARCH_PASSWORD}"
  requestTimeout: 120000

enterpriseSearch.host: "http://eps.${APP_NET}:3002"

logging:
  appenders:
    # json-file:
    file:
      type: file
      fileName: /usr/share/kibana/logs/kibana.log
      layout:
        type: json
    # file:
    #  type: file
    #  fileName: /usr/share/kibana/logs/kibana.log
    #  layout:
    #     type: pattern
    #     pattern: "[%date] [%level] [%logger] [%meta] %message"
  root:
    appenders: [default, file]
    level: info
  loggers:
    - name: plugins
      appenders: [default, file]
      level: info
    - name: optimize
      appenders: [default, file]
      level: info
    - name: telemetry
      appenders: [default, file]
      level: info
    - name: metrics.ops
      appenders: [default, file]
      level: info
