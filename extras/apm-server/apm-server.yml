######################### APM Server Configuration #########################

################################ APM Server ################################

apm-server:
  #host: "unix:///var/run/docker.sock"
  #host: "unix:/usr/share/elastic-agent/state/data/tmp/default/apm-server/apm-server.sock"
  host: "0.0.0.0"
  #host: "apm.nginx.local"

  #---------------------------- APM Server - RUM Real User Monitoring ----------------------------

  # Enable Real User Monitoring (RUM) Support. By default RUM is disabled.
  # RUM does not support token based authorization. Enabled RUM endpoints will not require any authorization
  # token configured for other endpoints.
  rum:
    enabled: true
    output:
      elasticsearch:
        hosts:
          - "https://es01.${APP_HOST}.${APP_NET}:9200"
          - "https://es02.${APP_HOST}.${APP_NET}:9201"
          # - "https://es03.${APP_HOST}.${APP_NET}:9202"
        protocol: "https"
        #api_key: "id:api_key"
        username: "${ELASTICSEARCH_USERNAME}"
        password: "${ELASTICSEARCH_PASSWORD}"
        ssl.certificate_authorities: ["${ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES}"]
        # ssl.certificate: "${APM_SERVER_CERT}"
        # ssl.key: "${APM_SERVER_CERT_KEY}"
      # Index pattern in which to search for source maps, when fetching source maps from Elasticsearch.
      # index_pattern: "apm-*-sourcemap*"

  #---------------------------- APM Server - Agent Configuration ----------------------------
  kibana:
    enabled: true
    host: "https://kibana.${APP_HOST}.${APP_NET}:5601"
    protocol: "https"
    # api_key: "${AGENT_API_KEY}"
    # username: "apm_system"
    username: "${ELASTICSEARCH_USERNAME}"
    password: "${ELASTICSEARCH_PASSWORD}"
    ssl.enabled: true
    ssl.certificate_authorities: ["${ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES}"]
    ssl.verification_mode: "certificate"
    # ssl.certificate: "${APM_SERVER_CERT}"
    # ssl.key: "${APM_SERVER_CERT_KEY}"

#================================ Outputs =================================

#output.console:

#-------------------------- Elasticsearch output --------------------------
output.elasticsearch:
  enabled: true
  hosts: 
    - "https://es01.${APP_HOST}.${APP_NET}:9200"
    - "https://es02.${APP_HOST}.${APP_NET}:9201"
    # - "https://es03.${APP_HOST}.${APP_NET}:9202"
  protocol: "https"
  #username: "apm_system"
  username: "${ELASTICSEARCH_USERNAME}"
  password: "${ELASTICSEARCH_PASSWORD}"
  ssl.enabled: true
  ssl.certificate_authorities: ["${ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES}"]
  ssl.verification_mode: "certificate"
  # ssl.certificate: "${APM_SERVER_CERT}"
  # ssl.key: "${APM_SERVER_CERT_KEY}"

#=============================== HTTP Endpoint ===============================

http.enabled: true
http.host: "0.0.0.0"
#http.host: "apm.nginx.local"
http.port: 5066

#============================= X-pack Monitoring =============================

xpack.monitoring.enabled: true
monitoring:
  enabled: false
  cluster_uuid: "${CLUSTER_UUID}"

# monitoring:
#   elasticsearch:
#     username: "${ELASTICSEARCH_USERNAME}"
#     password: "${ELASTICSEARCH_PASSWORD}"
#     hosts: 
#       - "https://es01.${APP_HOST}.${APP_NET}:9200"
#       - "https://es02.${APP_HOST}.${APP_NET}:9201"
#       # - "https://es03.${APP_HOST}.${APP_NET}:9202"
#     protocol: "https"
#     ssl.enabled: true
#     ssl.certificate_authorities: ["${ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES}"]
#     ssl.verification_mode: "certificate"
#     ssl.certificate: "${APM_SERVER_CERT}"
#     ssl.key: "${APM_SERVER_CERT_KEY}"
