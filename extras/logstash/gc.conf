input {
  beats {
    port => 5045
  }
}

filter {
  grok {
    match => {"message" => "%{TIMESTAMP_ISO8601:timestamp}: %{NUMBER:jvm_time}: \[%{DATA:gc_type} \(%{DATA:gc_cause}\) %{DATA:gc_time}: \[%{DATA:gc_collector}: %{NUMBER:young_generation_before}\K\-\>%{NUMBER:young_generation_after}\K\(%{NUMBER:young_generation_total}\K\)\, %{NUMBER:collection_time} .*?\] %{NUMBER:heap_before}\K\-\>%{NUMBER:heap_after}\K\(%{NUMBER:heap_total}\K\)\, %{NUMBER:gc_duration} .*?\] \[.*?\: .*?\=%{NUMBER:cpu_time} .*?\=%{NUMBER:system_time}\, .*?\=%{NUMBER:clock_time} .*?\]"}
  }
  mutate {
    convert => {
      "young_generation_before" => "integer"
      "young_generation_after" => "integer"
      "young_generation_total" => "integer"
      "heap_before" => "integer"
      "heap_after" => "integer"
      "heap_total" => "integer"
      "gc_duration" => "integer"
      "cpu_time" => "integer"
      "system_time" => "integer"
      "clock_time" => "integer"
    }
  }
#   if [log_type] in [ "test", "staging" ] {
#     mutate { add_field => { "[@metadata][target_index]" => "test-%{+YYYY-MM}" } }
#   } else if [log_type] == "production" {
#     mutate { add_field => { "[@metadata][target_index]" => "prod-%{+YYYY-MM-dd}" } }
#   } else if [log_type] == "development" {
#     mutate { add_field => { "[@metadata][target_index]" => "dev-%{+YYYY-MM-dd}" } }
#   } else {
#     mutate { add_field => { "[@metadata][target_index]" => "unknown-%{+YYYY}" } }
#   }
 }
 
output {
  elasticsearch {
    hosts => ["https://es01.${APP_HOST}.${APP_NET}:9200"]
    # index => "%{[@metadata][target_index]}"
    # https://stackoverflow.com/questions/49810704/elasticsearchtransporttransporterrorsnotfound-404-errorroot-cau
    # document_id => "%{[@metadata][doc][_id][target_index]}"
    document_id => "%{[@metadata][doc][_id]}"
    data_stream => true
    cacert => ["${ELASTIC_SSL_CERTIFICATEAUTHORITY}"]
    user => "${ELASTIC_USERNAME}"
    password => "${ELASTIC_PASSWORD}"
  }
}
