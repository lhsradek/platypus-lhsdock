# https://www.elastic.co/guide/en/logstash/current/plugins-inputs-elastic_agent.html
input {
  elastic_agent {
    port => 5044
    ssl => true
    ssl_certificate_authorities => ["${ELASTIC_SSL_CERTIFICATEAUTHORITY}"]
    ssl_certificate => "/usr/share/logstash/config/certs/logstash.crt"
    ssl_key => "/usr/share/logstash/config/certs/logstash.key"
    ssl_verify_mode => "force_peer"
  }
}

filter {
  if [service][type] == "traefik" {
    if [fileset][name] == "access" {
      json {
        source => "message"
        remove_field => ["time"]
      } 
      if [RouterName] =~ /.+/ {
        mutate {
          replace => { "message" => "%{ClientHost} [%{DownstreamStatus}] - %{RouterName}: %{RequestMethod} %{RequestPath}" }
        }
      } else {
        mutate {
          replace => { "message" => "%{ClientHost} [%{DownstreamStatus}] - %{RequestAddr}: %{RequestMethod} %{RequestPath}" }
        }
      } 
    }
  }
}

# https://www.elastic.co/guide/en/logstash/current/plugins-outputs-elasticsearch.html
# for ingest pipeline see  https://www.elastic.co/guide/en/logstash/current/use-ingest-pipelines.html
output {
  if [@metadata][pipeline] {
    elasticsearch {
      hosts => ["https://es01.${APP_HOST}.${APP_NET}:9200"]
      manage_template => true
      index => "%{[@metadata][beat]}-%{[@metadata][version]}"
      action => "create"
      pipeline => "%{[@metadata][pipeline]}"
      data_stream => true
      ssl => true
      cacert => ["${ELASTIC_SSL_CERTIFICATEAUTHORITY}"]
      user => "${LOGSTASH_USERNAME}"
      password => "${LOGSTASH_PASSWORD}"
    }
  } else {
    elasticsearch {
      hosts => ["https://es01.${APP_HOST}.${APP_NET}:9200"]
      manage_template => true
      index => "%{[@metadata][beat]}-%{[@metadata][version]}"
      action => "create"
      data_stream => true
      ssl => true
      cacert => ["${ELASTIC_SSL_CERTIFICATEAUTHORITY}"]
      user => "${LOGSTASH_USERNAME}"
      password => "${LOGSTASH_PASSWORD}"
    }
  }
}
