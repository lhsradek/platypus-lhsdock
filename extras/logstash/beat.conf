# https://www.elastic.co/guide/en/logstash/current/plugins-inputs-beats.html
input {
  beats {
    port => 5044
    ssl => true
    ssl_certificate_authorities => ["${ELASTIC_SSL_CERTIFICATEAUTHORITY}"]
    ssl_certificate => "/usr/share/logstash/config/certs/logstash.crt"
    ssl_key => "/usr/share/logstash/config/certs/logstash.key"
    ssl_verify_mode => "force_peer"
  }
}

filter {
  if [service][type] == "traefik" or [data_stream][dataset] == "traefik.access" {
    json {
      source => "message"
    }
    date {
      match => ["time", "ISO8601"]
      timezone => "UTC"
      target => "time"
    }
    if [data_stream][dataset] == "traefik.access" {
      if [@timestamp] !~ /.+/ {
        mutate {
          add_field => {
            "@timestamp" => "%{time}"
          }
        }
      }
    }
    ruby {
      code =>'event.set("time", Time.at(event.get("time").to_f).strftime("%Y-%m-%d %H:%M"))'
    }
    if [RouterName] =~ /.+/ {
      mutate {
        replace => { "message" => "%{[app][id]} %{time} [%{DownstreamStatus}] %{ClientHost} - %{RouterName}: %{RequestMethod} %{RequestPath}" }
      }
    } else {
      mutate {
        replace => { "message" => "%{[app][id]} %{time} [%{DownstreamStatus}] %{ClientHost} - %{RequestAddr}: %{RequestMethod} %{RequestPath}" }
      }
    }
    mutate {
      remove_field => ["time"]
    }
  } else if [service][type] == "nginx" or [data_stream][dataset] =~ /nginx/ {
    mutate {
      replace => { "message" => "%{[app][id]} %{[message]}" }
    }
  } else if [log][file][path] =~ /traefik/ {
    kv {
      remove_char_value => "\""
    }
    date {
      match => ["time", "ISO8601"]
      timezone => "UTC"
      target => "time"
    }
    ruby {
      code =>'event.set("time", Time.at(event.get("time").to_f).strftime("%Y-%m-%d %H:%M"))'
    }
    mutate { gsub => [ "msg", "\\n", " " ] }
    mutate { uppercase => [ "level" ] }
    mutate {
      replace => { "message" => "%{[app][id]} %{time} [%{level}] %{msg}" }
    }
    mutate { lowercase => [ "level" ] }
    mutate {
      add_field => {
        "[event][kind]" => "event"
        "[event][category]" => "log"
      }
      remove_field => ["time", "msg"]
    }
    if [event][dataset] !~ /.+/ {
      mutate {
        add_field => {
          "[event][dataset]" => "traefik.error"
        }
      }
    }
# don't test [service][type] elastic-agent have generic log for kibana
  } else if [log][file][path] =~ /kibana.log/ {
    mutate {
      replace => { "message" => "%{[app][id]} %{[message]}" }
      add_field => {
        "[event][kind]" => "event"
        "[event][category]" => "log"
      }
    }
    if [event][dataset] !~ /.+/ {
      mutate {
        add_field => {
          "[event][dataset]" => "kibana.log"
        }
      }
    }
  }
}

# https://www.elastic.co/guide/en/logstash/current/plugins-outputs-elasticsearch.html
output {
  elasticsearch {
    hosts => ["https://es01.${APP_HOST}.${APP_NET}:9200"]
    data_stream => true
    ssl => true
    cacert => ["${ELASTIC_SSL_CERTIFICATEAUTHORITY}"]
    user => "${LOGSTASH_USERNAME}"
    password => "${LOGSTASH_PASSWORD}"
  }
}
