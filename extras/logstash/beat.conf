# https://www.elastic.co/guide/en/logstash/current/plugins-inputs-beats.html
input {
  beats {
    port => 5045
    ssl => true
    ssl_certificate_authorities => ["${ELASTIC_SSL_CERTIFICATEAUTHORITY}"]
    ssl_certificate => "/usr/share/logstash/config/certs/logstash.crt"
    ssl_key => "/usr/share/logstash/config/certs/logstash.key"
    ssl_verify_mode => "force_peer"
  }
}

filter {
  if [service][type] == "elasticsearch" {
    if [fileset][name] == "gc" {
      grok {
        match => {"message" => "%{TIMESTAMP_ISO8601:timestamp}: %{NUMBER:jvm_time}: \[%{DATA:gc_type} \(%{DATA:gc_cause}\) %{DATA:gc_time}: \[%{DATA:gc_collector}: %{NUMBER:young_generation_before}\K\-\>%{NUMBER:young_generation_after}\K\(%{NUMBER:young_generation_total}\K\)\, %{NUMBER:collection_time} .*?\] %{NUMBER:heap_before}\K\-\>%{NUMBER:heap_after}\K\(%{NUMBER:heap_total}\K\)\, %{NUMBER:gc_duration} .*?\] \[.*?\: .*?\=%{NUMBER:cpu_time} .*?\=%{NUMBER:system_time}\, .*?\=%{NUMBER:clock_time} .*?\]"}
      }
      mutate {
        convert => {
          "young_generation_before" => "integer"
          "young_generation_after" => "integer"
          "young_generation_total" => "integer"
          "heap_before" => "integer"
          "heap_after" => "integer"
          "heap_total" => "integer"
          "gc_duration" => "integer"
          "cpu_time" => "integer"
          "system_time" => "integer"
          "clock_time" => "integer"
        }
      }
    }
  }
}

# https://www.elastic.co/guide/en/logstash/current/plugins-outputs-elasticsearch.html
# https://www.elastic.co/guide/en/logstash/current/use-ingest-pipelines.html
output {
#  if [@metadata][pipeline] {
#    elasticsearch {
#      hosts => ["https://es01.${APP_HOST}.${APP_NET}:9200"]
#      data_stream => true
#      pipeline => "%{[@metadata][pipeline]}"
#      ssl => true
#      cacert => ["${ELASTIC_SSL_CERTIFICATEAUTHORITY}"]
#      user => "${LOGSTASH_USERNAME}"
#      password => "${LOGSTASH_PASSWORD}"
#    }
#  } else {
    elasticsearch {
      hosts => ["https://es01.${APP_HOST}.${APP_NET}:9200"]
      data_stream => true
      ssl => true
      cacert => ["${ELASTIC_SSL_CERTIFICATEAUTHORITY}"]
      user => "${LOGSTASH_USERNAME}"
      password => "${LOGSTASH_PASSWORD}"
    }
#  }
}
