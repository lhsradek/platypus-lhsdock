#
# https://zharif.my/logging-elk-cf/
#
# https://www.elastic.co/guide/en/logstash/current/plugins-inputs-tcp.html
# https://www.elastic.co/guide/en/logstash/current/plugins-inputs-udp.html

input {
  tcp {
    port => 5000
    type => syslog
  }
  udp {
    port => 5000
    type => syslog
  }
}

filter {
  grok {
    match => { "message" => "%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{SYSLOGPROG}: %{GREEDYDATA:msg}" }
  }
  syslog_pri { }
  date {
    match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
  }
  mutate {
    remove_field => [ "message", "priority", "ts", "severity", "facility", "facility_label", "severity_label", "syslog5424_pri", "proc", "syslog_severity_code", "syslog_facility_code", "syslog_facility", "syslog_severity", "syslog_hostname", "syslog_message", "syslog_timestamp", "ver" ]
  }
  mutate {
    remove_tag => [ "_grokparsefailure_sysloginput" ]
  }
  if [msg] =~ "^ *{" {
    json {
      source => "msg"
    }
    if [msg][Request] =~ "^ *{" {
      json {
        source => "[msg][Request]"
      }
    }
    if "_jsonparsefailure" in [tags] {
      drop {}
    }
    mutate {
      remove_field => [ "msg" ]
    }
  }
#   if [log_type] in [ "test", "staging" ] {
#     mutate { add_field => { "[@metadata][target_index]" => "test-%{+YYYY-MM}" } }
#   } else if [log_type] == "production" {
#     mutate { add_field => { "[@metadata][target_index]" => "prod-%{+YYYY-MM-dd}" } }
#   } else if [log_type] == "development" {
#     mutate { add_field => { "[@metadata][target_index]" => "dev-%{+YYYY-MM-dd}" } }
#   } else {
#     mutate { add_field => { "[@metadata][target_index]" => "unknown-%{+YYYY}" } }
#   }
 }
 
# https://www.elastic.co/guide/en/logstash/current/plugins-outputs-elasticsearch.html
output {
  elasticsearch {
    hosts => ["https://es01.${APP_HOST}.${APP_NET}:9200"]
    # https://stackoverflow.com/questions/49810704/elasticsearchtransporttransporterrorsnotfound-404-errorroot-cau
    # document_id => "%{[@metadata][doc][_id][target_index]}"
    # https://www.rubydoc.info/gems/elasticsearch-rails
    document_id => "%{[@metadata][doc][_id]}"
    data_stream => true
    ssl => true
    cacert => ["${ELASTIC_SSL_CERTIFICATEAUTHORITY}"]
    # api_key => "${LOGSTASH_ELASTIC_AGENT_API_KEY}"
    user => "${LOGSTASH_USERNAME}"
    password => "${LOGSTASH_PASSWORD}"

  }
}
