  
  weblhs:
    # Alpine Linux
    # lhsradek/lhsdock has openssl, perl and the program platypus.pl for certificates,
    # which I don't use much anymore, 'cause the Elastic Certificate Tool is used by webservice 'setup'.
    # build:
    #   context: ./context
    #   dockerfile: Dockerfile 
    # image: lhsradek/lhsdock:v3
    image: nginx:alpine
    deploy:
      resources:
        limits:
          memory: ${NGINX_LIMIT}
    restart: ${DOCKER_RESTART_POLICY}
    container_name: "${APP_HOST}-${APP_ID}-web"
    hostname: "${APP_HOST}.${INT_NETWORK}"
    networks:
      # for traefik:
      default:
      # local network:
      intnet:
        ipv4_address: ${ES_NET}.21
    # ports:
    #   - 4443:443
    volumes:
      - ./extras/nginx/default-https.conf:/etc/nginx/conf.d/default.conf:ro
      - ./extras/nginx/htpasswd:/etc/nginx/conf.d/htpasswd
      - ./certs/ca/ca.crt:/etc/ssl/private/ca.crt
      - ./certs/${CERTNAME}.crt:/etc/ssl/private/cacert.crt
      - ./certs/${CERTNAME}.key:/etc/ssl/private/cacert.key
      # The first mount add bash and ping to nginx:alpine - lhsradek/lhsdock this dont'n need, see:
      # https://github.com/lhsradek/platypus-lhsdock/blob/main/context/Dockerfile of lhsradek/lhsdock:v3
      - ./context/root/bin/alpine/add.sh:/docker-entrypoint.d/05-add-packages.sh 
      - ./application/html:/var/www/html:ro
      - ./logs/nginx:/var/log/nginx
      - esdata01:/root/bin/volume/es01:ro
      - esdata02:/root/bin/volume/es02:ro
      - esdata03:/root/bin/volume/es03:ro
      - logstash:/root/bin/volume/logstash:ro
      - epsdata:/root/bin/volume/eps:ro
      - apm:/root/bin/volume/apm:ro
      - fleet:/root/bin/volume/fleet:ro
      - heartbeat:/root/bin/volume/heartbeat:ro
      - filebeat:/root/bin/volume/filebeat:ro
      - kibana:/root/bin/volume/kibana:ro
      - metricbeat:/root/bin/volume/metricbeat:ro
      # It's for my prune volume deletion protection:
      - wordpresswp:/root/bin/volume/wordpress-wp-${WP_NUM}:ro
      - wordpressdb:/root/bin/volume/wordpress-db-${WP_NUM}:ro
      - wordpresspma:/root/bin/volume/wordpress-pma-${WP_NUM}:ro
      - wordpressredis:/root/bin/volume/wordpress-redis-${WP_NUM}:ro
      - wordpressfleet:/root/bin/volume/wordpress-fleet-${WP_NUM}:ro
      - wordpressfilebeat:/root/bin/volume/wordpress-filebeat-${WP_NUM}:ro
      - wordpressmetricbeat:/root/bin/volume/wordpress-metricbeat-${WP_NUM}:ro
      - tomboladb:/root/bin/volume/tombola-db:ro
      - tombolafleet:/root/bin/volume/tombola-fleet:ro
      - traefikfilebeat:/root/bin/volume/traefik-filebeat:ro
      - traefikmetricbeat:/root/bin/volume/traefik-metricbeat:ro
    environment:
      - APP_ID=${APP_ID}
      - APP_HOST=${APP_HOST}
      - APP_NET=${INT_NETWORK}
      - TZ=${TIME_ZONE}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${DOCKER_NETWORK}"
      - "traefik.http.routers.weblhs-public.rule=Host(`${APP_HOST}.${INT_NETWORK}`)"
      - "traefik.http.routers.weblhs-public.entrypoints=https"
      - "traefik.http.routers.weblhs-public.tls=true"
      - "traefik.http.services.weblhs-${APP_ID}.loadbalancer.server.port=443"
      - "traefik.http.services.weblhs-${APP_ID}.loadbalancer.server.scheme=https"
    healthcheck:
      test: "curl -s --cacert /etc/ssl/private/ca.crt -I https://localhost/downloads | grep -q 'HTTP/2 301'"
      interval: 5s
      timeout: 5s
      retries: 150
 
  weblhs-php:
    # Alpine Linux
    # image: php:fpm-alpine
    # or lhsradek/fpm:v1 with elastic-apm-php agent https://www.elastic.co/guide/en/apm/agent/php/current/intro.html
    # https://github.com/lhsradek/platypus-lhsfpm/blob/main/context/Dockerfile
    image: lhsradek/fpm:v1
    deploy:
      resources:
        limits:
          memory: ${PHP_LIMIT}
    restart: ${DOCKER_RESTART_POLICY}
    container_name: "${APP_HOST}-${APP_ID}-php"
    hostname: "weblhs-php.${APP_HOST}.${INT_NETWORK}"
    networks:
      # for traefik:
      default:
      # local network:
      intnet:
        ipv4_address: ${ES_NET}.13
    environment:
      - APP_ID=${APP_ID}
      - APP_HOST=${APP_HOST}
      - HOST_NICK=${HOST_NICK}
      - APP_NET=${INT_NETWORK}
      - CLUSTER_NAME=${CLUSTER_NAME}
      - CLUSTER_UUID=${CLUSTER_UUID}
      - ELASTIC_APM_ENVIRONMENT=${STAGE}
      - ELASTIC_APM_API_KEY=${ELASTIC_APM_API_KEY}
      - ELASTIC_APM_SERVER_URL=${ELASTIC_APM_SERVER_URL}
      - ELASTIC_APM_SERVICE_NAME=${APP_HOST}-${APP_ID}
      - PUID=1000
      - PGID=1000
      - TZ=${TIME_ZONE}
    volumes:
      - ./extras/php/phpSettings.conf:/usr/local/etc/php-fpm.d/zzz-phpSettings.conf
      - ./application/html:/var/www/html:ro
      - ./logs/nginx/php-error.log:/var/log/error.log
      - ./logs/nginx/php-access.log:/var/log/access.log
