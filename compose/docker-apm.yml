
#
# === APM Server ===
#
  apm-server:
    depends_on:
      kibana:
        condition: service_healthy
    # Ubuntu - enterprisesearch
    image: docker.elastic.co/apm/apm-server:${STACK_VERSION}
    deploy:
      resources:
        limits:
          memory: ${MEM_LIMIT}
    restart: ${DOCKER_RESTART_POLICY}
    container_name: "${APP_HOST}-${APP_ID}-apm-server"
    hostname: "apm-server.${APP_HOST}.${INT_NETWORK}"
    networks:
      # for traefik
      # default:
      # local network:
      intnet:
        ipv4_address: ${ES_NET}.10
    # for external apps as traefik or other apps without apm in container
    ports:
      - ${APM_PORT}:8200
      # - ${MONITOR_PORT}:5066
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./certs:/usr/share/apm-server/certs
      # - ./extras/hosts/hosts:/etc/hosts
      - ./extras/apm-server/apm-server.yml:/usr/share/apm-server/apm-server.yml:ro
      - ./logs/apm:/usr/share/apm-server/logs
      - apm:/usr/share/apm-server
    environment:
      - APP_ID=${APP_ID}
      - APP_HOST=${APP_HOST}
      - APP_NET=${INT_NETWORK}
      - HOST_NICK=${HOST_NICK}
      - CLUSTER_UUID=${CLUSTER_UUID}
      - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME}
      - ELASTICSEARCH_PASSWORD=${APM_PASSWORD}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=/usr/share/apm-server/certs/ca/ca.crt
      - ELASTIC_APM_ENVIRONMENT=${STAGE}
      - ELASTIC_APM_API_KEY=${ELASTIC_APM_API_KEY}
      - ELASTIC_APM_SERVER_URL=${ELASTIC_APM_SERVER_URL}
      - ELASTIC_APM_SERVICE_NAME=${APP_HOST}-${APP_ID}
      - ELASTIC_APM_SERVICE_NODE_NAME=apm-server.${APP_HOST}.${INT_NETWORK}
      - ES1_PORT=${ES1_PORT}
      - ES2_PORT=${ES2_PORT}
      - ES3_PORT=${ES3_PORT}
      - MONITOR_PORT=${MONITOR_PORT}
      - KIBANA_HOST=${KIBANA_HOST}
      - STAGE=${STAGE}
      - VERIFICATION_MODE=${VERIFICATION_MODE}        
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${DOCKER_NETWORK}"
      - "traefik.http.routers.apm-server-public.rule=Host(`apm-server.${APP_HOST}.${INT_NETWORK}`)"
      - "traefik.http.routers.apm-server-public.service=apm-server-${APP_ID}"
      - "traefik.http.routers.apm-server-public.entrypoints=http-${APM_PORT}"
      - "traefik.http.routers.apm-server-public.tls=false"
      - "traefik.http.services.apm-server-${APP_ID}.loadbalancer.server.port=${APM_PORT}"
      - "traefik.http.services.apm-server-${APP_ID}.loadbalancer.server.scheme=http"
      - "traefik.http.routers.apm-server-public-monitor.rule=Host(`apm-server.${APP_HOST}.${INT_NETWORK}`)"
      - "traefik.http.routers.apm-server-public-monitor.service=apm-server-monitor-${APP_ID}"
      - "traefik.http.routers.apm-server-public-monitor.entrypoints=http-${MONITOR_PORT}"
      - "traefik.http.routers.apm-server-public-monitor.tls=false"
      - "traefik.http.services.apm-server-monitor-${APP_ID}.loadbalancer.server.port=${MONITOR_PORT}"
      - "traefik.http.services.apm-server-monitor-${APP_ID}.loadbalancer.server.scheme=http"
    healthcheck:
      test: ["CMD-SHELL", "apm-server test output | grep 'talk to server... OK'"]
      interval: 10s
      timeout: 30s
      retries: 500
