   
#   
# === Enterprisesearch ===
#
  eps:
    depends_on:
      apm-server:
        condition: service_healthy
    # Ubuntu - enterprisesearch
    image: docker.elastic.co/enterprise-search/enterprise-search:${STACK_VERSION}
    deploy:
      resources:
        limits:
          memory: ${MEM_EPS_LIMIT}
    restart: ${DOCKER_RESTART_POLICY}
    container_name: "${APP_HOST}-${APP_ID}-eps"
    hostname: "eps.${APP_HOST}.${INT_NETWORK}"
    networks:
      # local network:
      intnet:
        ipv4_address: ${ES_NET}.11
    # ports:
    #  - ${ENTERPRISE_SEARCH_PORT}:3002
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./certs:/usr/share/enterprise-search/config/certs:ro
      - ./extras/hosts/hosts:/etc/hosts:ro
      - ./extras/enterprise-search/enterprise-search.yml:/usr/share/enterprise-search/config/enterprise-search.yml:ro
      - ./logs/eps:/var/log/enterprise-search
      - epsdata:/usr/share/enterprise-search
    # see https://www.elastic.co/guide/en/enterprise-search/current/docker.html
    environment:
      - APP_ID=${APP_ID}
      - APP_HOST=${APP_HOST}
      - HOST_NICK=${HOST_NICK}
      - APP_NET=${INT_NETWORK}
      - APP_SERVER_JAVA_OPTS=${EPS_APP_JAVA_OPTS}
      - CLUSTER_NAME=${CLUSTER_NAME}
      - APM_PORT=${APM_PORT}
      - ELASTIC_USERNAME=${ELASTIC_USERNAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - KIBANA_PASSWORD=${KIBANA_PASSWORD}
      - ELASTICSEARCH_HOSTS=${ELASTIC_HOST}
      - ELASTIC_SSL_CERTIFICATEAUTHORITIES=/usr/share/enterprise-search/config/certs/ca/ca.crt
      - ES_PORT=${ES1_PORT}
      - JAVA_OPTS=${EPS_JAVA_OPTS}
      - JAVA_GC_LOGGING=false
      - KIBANA_HOST=${KIBANA_HOST}
      - KIBANA_PORT=${KIBANA_PORT}
      - ENTERPRISE_SEARCH_PORT=${ENTERPRISE_SEARCH_PORT}
      - VERIFICATION_MODE=${VERIFICATION_MODE}
      - STAGE=${STAGE}
      - secret_management.encryption_keys=[${ENCRYPTION_KEYS}]
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD-SHELL", "curl -s -I http://eps.${APP_HOST}.${INT_NETWORK}:${ENTERPRISE_SEARCH_PORT} | grep -q 'HTTP/1.1 302 Found'"]
      interval: 10s
      timeout: 10s
      retries: 500
