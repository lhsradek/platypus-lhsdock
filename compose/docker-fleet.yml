
#
# === Fleet ===
#
  fleet:
    depends_on:
      kibana:
        condition: service_healthy
    # Ubuntu - fleet
    image: docker.elastic.co/beats/elastic-agent:${STACK_VERSION}
    # image: docker.elastic.co/beats/elastic-agent-complete:${STACK_VERSION}
    restart: ${DOCKER_RESTART_POLICY}
    container_name: "${APP_ID}-fleet"
    hostname: "fleet.${APP_HOST}.${INT_NETWORK}"
    networks:
      # for traefik:
      - default
      # local network:
      - intnet
    # ports:
    #  - ${APM_PORT}:8200
    #  - ${FLEET_PORT}:8220
    user: root # note, synthetic browser monitors require this set to `elastic-agent`
    # this EA is without enabled metricbeat
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - ./certs:/usr/share/elastic-agent/certs
      - ./extras/hosts/hosts:/etc/hosts
      - ./extras/elastic-agent/elastic-agent.yml:/usr/share/elastic-agent/elastic-agent.yml
      - ./extras/elastic-agent/apm-server.yml:/usr/share/elastic-agent/data/elastic-agent-${STV}/install/apm-server-${STACK_VERSION}-linux-x86_64/apm-server.yml
      - ./extras/elastic-agent/filebeat.yml:/usr/share/elastic-agent/data/elastic-agent-${STV}/install/filebeat-${STACK_VERSION}-linux-x86_64/filebeat.yml
      - ./logs/fleet:/usr/share/elastic-agent/state/data/logs
      - ./logs/fleet/apm-server:/usr/share/elastic-agent/data/elastic-agent-${STV}/install/apm-server-${STACK_VERSION}-linux-x86_64/logs
      - ./logs/fleet/filebeat:/usr/share/elastic-agent/data/elastic-agent-${STV}/install/filebeat-${STACK_VERSION}-linux-x86_64/logs
      - ./logs/es01:/usr/share/elastic-agent/data/elastic-agent-${STV}/install/filebeat-${STACK_VERSION}-linux-x86_64/elogs/es01
      - ./logs/es02:/usr/share/elastic-agent/data/elastic-agent-${STV}/install/filebeat-${STACK_VERSION}-linux-x86_64/elogs/es02
      - ./logs/es03:/usr/share/elastic-agent/data/elastic-agent-${STV}/install/filebeat-${STACK_VERSION}-linux-x86_64/elogs/es03
      - ./logs/dokuwiki:/usr/share/elastic-agent/data/elastic-agent-${STV}/install/filebeat-${STACK_VERSION}-linux-x86_64/elogs/nginx/dokuwiki
      - ./logs/eps:/usr/share/elastic-agent/data/elastic-agent-${STV}/install/filebeat-${STACK_VERSION}-linux-x86_64/elogs/eps
      - ./logs/kibana:/usr/share/elastic-agent/data/elastic-agent-${STV}/install/filebeat-${STACK_VERSION}-linux-x86_64/elogs/kibana
      - ./logs/nginx:/usr/share/elastic-agent/data/elastic-agent-${STV}/install/filebeat-${STACK_VERSION}-linux-x86_64/elogs/nginx/default
      - /root/platypus-box/logs/traefik:/usr/share/elastic-agent/data/elastic-agent-${STV}/install/filebeat-${STACK_VERSION}-linux-x86_64/elogs/traefik
      - fleet:/usr/share/elastic-agent
    # https://www.elastic.co/guide/en/fleet/current/agent-environment-variables.html
    # https://www.elastic.co/guide/en/fleet/current/secure-connections.html
    # https://www.elastic.co/guide/en/fleet/current/elastic-agent-container.html
    environment:
      # - AGENT_API_KEY=${AGENT_API_KEY}
      - APP_ID=${APP_ID}
      - APP_HOST=${APP_HOST}
      - APP_NET=${INT_NETWORK}
      - CLUSTER_NAME=${CLUSTER_NAME}
      - CLUSTER_UUID=${CLUSTER_UUID}
      - AMP_SERVER_ENABLE=1
      - ELASTIC_AGENT_TAGS=${ELASTIC_AGENT_TAGS}
      - ELASTICSEARCH_HOSTS=https://es01.${APP_HOST}.${INT_NETWORK}:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=/usr/share/elastic-agent/certs/ca/ca.crt
      - ELASTICSEARCH_CA=/usr/share/elastic-agent/certs/ca/ca.crt
      - FLEET_CA=/usr/share/elastic-agent/certs/ca/ca.crt
      - FLEET_URL=https://fleet.${APP_HOST}.${INT_NETWORK}:8220
      - FLEET_ENROLL=1
      - FLEET_ENROLLMENT_TOKEN=${FLEET_ENROLLMENT_TOKEN}
      - FLEET_SERVER_ENABLE=1
      - FLEET_SERVER_ELASTICSEARCH_HOST=https://es01.${APP_HOST}.${INT_NETWORK}:9200
      - FLEET_SERVER_ELASTICSEARCH_USERNAME=elastic
      - FLEET_SERVER_ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - FLEET_SERVER_ELASTICSEARCH_CA=/usr/share/elastic-agent/certs/ca/ca.crt
      - FLEET_SERVER_ELASTICSEARCH_REQUESTTIMEOUT=180000
      - FLEET_SERVER_HOST=fleet.${APP_HOST}.${INT_NETWORK}
      - FLEET_SERVER_CERT=/usr/share/elastic-agent/certs/fleet.${APP_HOST}.${INT_NETWORK}/fleet.${APP_HOST}.${INT_NETWORK}.crt
      - FLEET_SERVER_CERT_KEY=/usr/share/elastic-agent/certs/fleet.${APP_HOST}.${INT_NETWORK}/fleet.${APP_HOST}.${INT_NETWORK}.key
      - FLEET_SERVER_POLICY_ID=${FLEET_SERVER_POLICY_ID}
      - FLEET_SERVER_SERVICE_TOKEN=${FLEET_SERVER_SERVICE_TOKEN}
      - KIBANA_FLEET_USERNAME=elastic
      - KIBANA_FLEET_PASSWORD=${ELASTIC_PASSWORD}
      - KIBANA_FLEET_HOST=https://kibana.${APP_HOST}.${INT_NETWORK}:5601
      - KIBANA_CA=/usr/share/elastic-agent/certs/ca/ca.crt
      - KIBANA_FLEET_CA=/usr/share/elastic-agent/certs/ca/ca.crt
      - KIBANA_FLEET_SETUP=1
      - KIBANA_FLEET_REQUESTTIMEOUT=1200000
      - LOGSTASH_SERVER_CERT=/usr/share/elastic-agent/certs/logstash.${APP_HOST}.${INT_NETWORK}/logstash.${APP_HOST}.${INT_NETWORK}.crt
      - LOGSTASH_SERVER_CERT_KEY=/usr/share/elastic-agent/certs/logstash.${APP_HOST}.${INT_NETWORK}/logstash.${APP_HOST}.${INT_NETWORK}.key
      - STACK_VERSION=${STACK_VERSION}
      - STAGE=${STAGE}
      - STV=${STV}
      - VERIFICATION_MODE=${VERIFICATION_MODE}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${DOCKER_NETWORK}"
      - "traefik.http.routers.fleet-public.rule=Host(`fleet.${APP_HOST}.${INT_NETWORK}`)"
      - "traefik.http.routers.fleet-public.entrypoints=https"
      - "traefik.http.routers.fleet-public.tls=true"
      - "traefik.http.services.fleet-${APP_ID}.loadbalancer.server.port=8200"
      - "traefik.http.services.fleet-${APP_ID}.loadbalancer.server.scheme=http"
    healthcheck:
      test: ["CMD-SHELL", "elastic-agent status | grep 'Status: HEALTHY'"]
      interval: 10s
      timeout: 10s
      retries: 500
